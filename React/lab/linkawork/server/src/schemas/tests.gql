type Test {
  id: ID
  name: String
  description: String
  type: String
  creator: User
  variables: [Variable]
  questions: [Question]
}

type Variable {
  id: ID
  name: String
  description: String
  creator: User
}

type Question {
  id: ID
  description: String
  type: String
  options: [TestOption]
  multiple: Boolean
  order: Int
}

type TestOption {
  id: ID
  name: String
  correct: Boolean
}

type Operator {
  id: ID
  name: String
  operator: String
  type: String
}

extend type Query {
  #Get a operators
  operators(id: ID, type: String, limit: Int, offset: Int): [Operator]
    @auth
    @pagination

  #Get a tests
  tests(id: ID, type: String, limit: Int, offset: Int): [Test] @auth @pagination

  #get a variables
  variables(id: ID, type: String, limit: Int, offset: Int): [Variable]
    @auth
    @pagination

  #get a variables
  questions(id: ID, type: String, limit: Int, offset: Int): [Question]
    @auth
    @pagination
}

extend type Mutation {
  #create test
  createTest(name: String!, description: String, type: String!): Test
    @auth(name: "create-tests")

  #update a test
  updateTest(id: ID!, name: String, description: String, type: String): Test
    @auth(name: "update-tests")

  #delete a test
  deleteTest(id: ID!): Test @auth(name: "delete-tests")

  #create a test variable
  createTestVariable(test: ID!, name: String!, description: String): Variable
    @auth(name: "create-test-variable")

  #update a test variable
  updateTestVariable(id: ID!, name: String, description: String): Variable
    @auth(name: "update-test-variable")

  #delete a test variable
  daleteTestVariable(id: ID!): Variable @auth(name: "delete-test-variable")

  #create a test question
  createTestQuestion(
    test: ID!
    description: String!
    type: String!
    multiple: Boolean
  ): Question @auth(name: "create-test-question")

  #Update a test question
  updateTestQuestion(
    id: ID!
    description: String
    type: String
    multiple: Boolean
    order: Int
  ): Question @auth(name: "update-test-question")

  #Delete a test question
  deleteTestQuestion(id: ID!): Question @auth(name: "delete-test-question")

  #Create a question option
  createQuestionOption(
    question: ID!
    name: String!
    correct: Boolean
  ): TestOption @auth(name: "create-test-question-option")

  #update a question option
  updateQuestionOption(id: ID!, name: String, correct: Boolean): TestOption
    @auth(name: "update-test-question-option")

  #Delete a question option
  deleteQuestionOption(id: ID!): TestOption
    @auth(name: "delete-test-question-option")
}
